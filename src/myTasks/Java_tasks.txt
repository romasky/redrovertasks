1) Java Variables, numeric datatypes 

1.1 Объявите две переменные типа int, присвойте им любые значения и выведите их на экран.

1.2 Создайте три переменные a, b, c типа double. Присвойте им значения и вычислите:
        •        сумму a + b + c
        •        разность a - b - c
        •        произведение a * b * c
        •        частное (a + b) / c

1.3  Объявите два int-числа, например x = 7 и y = 2.
        •        Выведите результат деления x / y.
        •        Почему результат не 3.5? Как это исправить?




1.4.  Обмен значений без третьей переменной
        •        Объявите две переменные int x = 5; и int y = 10;
        •        Поменяйте их местами без использования третьей переменной.


1.5  Дано число int number = 345;.
        •        Найдите и выведите на экран последнюю цифру этого числа.








2)   Variables, primitive types  
 
2.1 Объявите переменные всех примитивных типов (byte, short, int, long, float, double, char, boolean).
        •        Присвойте им значения и выведите их на экран.


2.2         Используя Integer.MAX_VALUE и Integer.MIN_VALUE, выведите максимальное и минимальное значения типа int.
        •        Проделайте то же самое для long, short, byte, float и double.


2.3 Переполнение byte
        •        Создайте переменную byte b = 127;.
        •        Увеличьте b на 1 (b++). Что произошло? Почему?


2.4 Четное или нечетное число
        •        Создайте переменную int number, вводите данные в переменную с помощью консоли (Используйте класс Scanner).
        •        Напишите программу, которая проверяет, четное ли число (number % 2 == 0).


2.5 Конвертация типов
        •        Объявите переменную double d = 9.99;
        •        Преобразуйте d в int.
        •        Почему d = (int) d; возвращает 9, а не 10?






3) Boolean and if (operators ||, !, &&, etc)


3.1 Проверка положительного числа
        •        Дано число int num = -5;.
        •        Напишите программу, которая проверяет, является ли число положительным


3.2 Четное или нечетное число
        •        Дано int num = 14;.
        •        Используйте оператор % и оператор if, чтобы проверить, четное ли число


3.3 Проверка пароля
        •        Дано String password = "admin123";.
        •        Если введенный пароль равен "admin123", вывести "Доступ разрешен", иначе "Доступ запрещен".


3.4 Логическое И (&&)
        •        Даны два числа int a = 10, b = 20;.
        •        Напишите программу, которая проверяет, оба ли числа больше 5.


3.5 Логическое ИЛИ (||)
        •        Даны два числа int x = 7, y = 3;.
        •        Если хотя бы одно из чисел больше 5, вывести "Есть число больше 5".


3.6 Отрицание (!)
        •        Дано boolean isWeekend = false;.
        •        Выведите "Рабочий день", если не выходной (!isWeekend).
3.7 Проверка диапазона
        •        Дано число int num = 50;.
        •        Проверьте, находится ли число в диапазоне от 10 до 100 включительно


3.8 Определение времени суток
        •        Дано int hour = 15; (24-часовой формат).
        •        Напишите программу, которая проверяет:
        •        Утро (6-11)
        •        День (12-17)
        •        Вечер (18-23)
        •        Ночь (0-5)


3.9 Проверка високосного года
        •        Дано int year = 2024;.
        •        Напишите программу, которая проверяет, високосный ли год 








4) Loops: for, while, do while + if else


4.1 Сумма чисел от 1 до N
 •        Дано число N. Используя for, найдите сумму всех чисел от 1 до N.


4.2. Вывести четные числа от 1 до 20
•         Используя while, напечатайте все четные числа от 1 до 20.


4.3 Подсчет количества цифр в числе
•         Дано число X. Используя do-while, посчитайте, сколько цифр в числе.


4.4 Проверка простого числа
•         Дано число N. Используя for и if, проверьте, является ли оно простым (делится только на 1 и N).




4.5 Факториал числа
•         Дано число N. Используя for, вычислите N! (факториал).


4.6 Таблица умножения
•          Используя вложенные for, выведите таблицу умножения от 1 до 10.


4.7 Вывести первые N чисел Фибоначчи
•          Используя for, выведите N чисел последовательности Фибоначчи.






5) Arrays, Strings и reference types


5.1 Создание массива чисел
•          Создайте массив целых чисел размером 5. Заполните его числами от 1 до 5 и выведите его элементы на экран.
  
5.2 Четные и нечетные ячейки массива
•          Заполните массив strings значениями. Если индекс массива чётный - присвоить значение “Чётный”(ноль - цифра чётная), иначе присвоить “Нечётный”.


5.3 Работаем с элементами массива
•          int[] array = new int[]{-1, 2, 3, -4, -5};
•          Заполните массив в котором значения элементов массива array поменяются на противоположные по знаку


5.4 Объединяем массивы
•          Реализовать массив, в котором нужно скопировать содержимое массивов firstArray и secondArray в один массив resultArray.
Массив firstArray должен быть в начале нового массива resultArray, а secondArray после него.
Программа должна правильно обрабатывать массивы любой длины.
5.5 Перевернуть строку
•          Дана строка "hello". Используя цикл, выведите строку в обратном порядке.




5.6 Создать новый массив без повторяющихся элементов
•          Дано массив с повторяющимися элементами {1, 2, 3, 3, 4, 5, 5, 6}. Напишите программу, которая создает новый массив, содержащий только уникальные элементы.




5.7 Заполнение двумерного массива числами по порядку
•          Создайте двумерный массив размером 3x3 и заполните его числами от 1 до 9. Выведите массив на экран.




5.8 Поиск максимального элемента в двумерном массиве
•          Дано двумерный массив: int[][] array = {{5, 12, 3}, {8, 1, 6}, {11, 7, 2}}; Напишите программу, которая находит максимальный элемент в этом массиве и выводит его значение.





6) Looping through Arrays

6.1 Вывод всех элементов массива
•          Дан массив целых чисел. int[] array = {1, 2, 3, 4, 5}; Напишите программу, которая выводит все элементы массива на экран с помощью цикла for.

6.2 Поиск суммы элементов массива
•          Дан массив целых чисел. int[] array = {10, 20, 30, 40, 50};
 Напишите программу, которая находит и выводит сумму всех элементов массива.
 
6.3 Нахождение минимального и максимального значения в массиве
•          Дан массив целых чисел. int[] array = {45, 23, 12, 67, 89, 4}; Напишите программу, которая находит минимальное и максимальное значение в массиве и выводит их.
6.4 Обратный порядок массива
Описание: Дан массив целых чисел. int[] array = {1, 2, 3, 4, 5}; Напишите программу, которая выводит элементы массива в обратном порядке с использованием цикла for


6.5 Поиск первого и последнего вхождения элемента в массив
•          Дан массив целых чисел и число для поиска. int[] array = {1, 2, 3, 4, 2, 5, 2};  int target = 2; Напишите программу, которая находит первое и последнее вхождение этого числа в массиве и выводит их индексы. Если число не встречается в массиве, выведите соответствующее сообщение.


6.6 Удаление дублирующихся элементов в массиве
•          Дан массив целых чисел. int[] array = {1, 2, 2, 3, 4, 5, 5, 6}; Напишите программу, которая удаляет все дублирующиеся элементы и выводит новый массив без повторений.